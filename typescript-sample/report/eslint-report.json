{
  "projectType": "TypeScript",
  "reports": [
    "all",
    "comprehensive"
  ],
  "excludeRules": {
    "enabled": true,
    "rules": [
      "indent",
      "quotes",
      "semi",
      "comma-dangle",
      "no-trailing-spaces",
      "eol-last",
      "no-multiple-empty-lines",
      "space-before-function-paren",
      "space-before-blocks",
      "keyword-spacing",
      "space-infix-ops",
      "object-curly-spacing",
      "array-bracket-spacing",
      "comma-spacing",
      "key-spacing",
      "brace-style",
      "camelcase",
      "new-cap",
      "no-underscore-dangle",
      "no-unused-vars",
      "no-console",
      "no-debugger",
      "prefer-const",
      "no-var",
      "arrow-spacing",
      "no-spaced-func",
      "func-call-spacing",
      "no-multi-spaces",
      "no-trailing-spaces",
      "no-mixed-spaces-and-tabs",
      "no-tabs",
      "no-mixed-operators",
      "operator-linebreak",
      "nonblock-statement-body-position",
      "no-else-return",
      "no-nested-ternary",
      "no-unneeded-ternary",
      "object-shorthand",
      "prefer-template",
      "template-curly-spacing",
      "prefer-arrow-callback",
      "arrow-body-style",
      "no-duplicate-imports",
      "import/order",
      "import/no-unresolved",
      "import/extensions",
      "import/no-extraneous-dependencies",
      "import/prefer-default-export",
      "react/jsx-indent",
      "react/jsx-indent-props",
      "react/jsx-closing-bracket-location",
      "react/jsx-closing-tag-location",
      "react/jsx-curly-spacing",
      "react/jsx-equals-spacing",
      "react/jsx-first-prop-new-line",
      "react/jsx-max-props-per-line",
      "react/jsx-one-expression-per-line",
      "react/jsx-props-no-multi-spaces",
      "react/jsx-tag-spacing",
      "react/jsx-wrap-multilines",
      "react/self-closing-comp",
      "react/jsx-boolean-value",
      "react/jsx-curly-brace-presence",
      "react/jsx-no-bind",
      "react/jsx-no-literals",
      "react/jsx-pascal-case",
      "react/jsx-sort-default-props",
      "react/jsx-sort-props",
      "react/no-array-index-key",
      "react/no-danger",
      "react/no-deprecated",
      "react/no-did-mount-set-state",
      "react/no-did-update-set-state",
      "react/no-direct-mutation-state",
      "react/no-find-dom-node",
      "react/no-is-mounted",
      "react/no-multi-comp",
      "react/no-render-return-value",
      "react/no-set-state",
      "react/no-string-refs",
      "react/no-unescaped-entities",
      "react/no-unknown-property",
      "react/no-unsafe",
      "react/no-unused-prop-types",
      "react/no-unused-state",
      "react/prefer-es6-class",
      "react/prefer-stateless-function",
      "react/prop-types",
      "react/react-in-jsx-scope",
      "react/require-default-props",
      "react/require-optimization",
      "react/require-render-return",
      "react/sort-comp",
      "react/sort-prop-types",
      "react/style-prop-object",
      "react/void-dom-elements-no-children",
      "react/jsx-key",
      "react/jsx-no-duplicate-props",
      "react/jsx-no-undef",
      "react/jsx-uses-react",
      "react/jsx-uses-vars",
      "react/no-array-index-key",
      "react/no-danger",
      "react/no-deprecated",
      "react/no-did-mount-set-state",
      "react/no-did-update-set-state",
      "react/no-direct-mutation-state",
      "react/no-find-dom-node",
      "react/no-is-mounted",
      "react/no-multi-comp",
      "react/no-render-return-value",
      "react/no-set-state",
      "react/no-string-refs",
      "react/no-unescaped-entities",
      "react/no-unknown-property",
      "react/no-unsafe",
      "react/no-unused-prop-types",
      "react/no-unused-state",
      "react/prefer-es6-class",
      "react/prefer-stateless-function",
      "react/prop-types",
      "react/react-in-jsx-scope",
      "react/require-default-props",
      "react/require-optimization",
      "react/require-render-return",
      "react/sort-comp",
      "react/sort-prop-types",
      "react/style-prop-object",
      "react/void-dom-elements-no-children",
      "my-custom-rule",
      "project-specific-rule"
    ],
    "count": 131
  },
  "results": [
    {
      "filePath": "./src/index.ts",
      "errorCount": 1,
      "warningCount": 0,
      "messages": [
        {
          "ruleId": null,
          "severity": 2,
          "message": "Parsing error: Cannot read file '/Users/deepaksharma/projects/ui-code-insight/samples/typescript-sample/tsconfig.json'.",
          "fatal": true
        }
      ]
    }
  ]
}